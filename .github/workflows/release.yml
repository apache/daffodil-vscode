# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: Automatic Release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Export git tag and package.json version
        run: |
          GIT_TAG=$(echo ${GITHUB_REF#refs/*/} | cut -d 'v' -f 2)
          LIB_VERSION=$(echo $(node -p "JSON.stringify(require('./package.json').version)") | sed 's|"||g')
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV
          echo "LIB_VERSION=$LIB_VERSION" >> $GITHUB_ENV

      - name: Check if git tag matches package version
        run: if [[ ${{env.GIT_TAG}} != ${{env.LIB_VERSION}} ]]; then exit 1; else exit 0; fi
        shell: bash

      - name: Check if pre-release
        run: |
          if [[ ${{env.GIT_TAG}} == *"pre-"* || ${{env.GIT_TAG}} == *"-pre"* ]]; then
            echo "PRE_RELEASE=true" >> $GITHUB_ENV
          else
            echo "PRE_RELEASE=false" >> $GITHUB_ENV
          fi
        shell: bash
      
      - name: Create backend package
        run: |
          sbt test headerCheck universal:packageBin
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: yarn install

      - name: Check formatting
        run: |
          yarn run prettier src -c

      - name: Yarn Compile
        run: yarn compile

      - name: Create vsix
        run: |
          yarn run package -o daffodil-debugger-${{env.GIT_TAG}}.vsix
    
      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: "${{ env.PRE_RELEASE }}"
          files: |
            ${{github.workspace}}/daffodil-debugger-${{env.GIT_TAG}}.vsix
            ${{github.workspace}}/server/core/target/universal/daffodil-debugger-*.zip
