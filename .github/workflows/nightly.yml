# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: Nightly Tests

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-test-package:
    name: 'Build, Test, and Package (OS: ${{ matrix.os }}, Node: ${{ matrix.node }}, VS Code: ${{ matrix.vscode }} )'
    strategy:
      matrix:
        os: [ macos-11, ubuntu-20.04, windows-2019 ]
        node: [ '14', '16' ]
        vscode: [ 'stable', 'insiders' ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      DAFFODIL_TEST_VSCODE_VERSION: ${{ matrix.vscode }}
      SBT: sbt -J-Xms1024m -J-Xmx5120m -J-XX:ReservedCodeCacheSize=512m -J-XX:MaxMetaspaceSize=1024m ++2.12.15
    steps:
      - name: Setup Java 8
        uses: actions/setup-java@v3.10.0
        with:
          distribution: temurin
          java-version: 8
      - uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.3.0
        with:
          node-version: ${{ matrix.node }}
      - run: $SBT compile # used to initialize sbt, if not done sbt universal:packageBin ran by yarn package times out -- windows only
        if: runner.os == 'Windows'
      - run: yarn install
      - run: yarn package
      - run: xvfb-run -a yarn test
        if: runner.os == 'Linux'
      - run: yarn test
        if: runner.os != 'Linux'
      - run: $SBT test
