# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release Candidate

# We build release candidates using GitHub actions when a rc* tag is pushed.
# Once the vote passes for a release candidate we promote that candidate to the
# final release--we do not do a new build for final release tags. When
# triggered via workflow_dispatch the release candidate action disables
# publishing regardless of the publish setting--it should be used for testing only
on:
  push:
    tags:
      - 'v*-rc*'
  workflow_dispatch:

jobs:

  release-candidate:
    name: Release Candidate ${{ github.ref_name }}
    runs-on: ubuntu-22.04

    steps:

      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: ASF Release Candidate
        id: rc
        uses: apache/daffodil-infrastructure/actions/release-candidate@main
        with:
          tlp_dir: 'daffodil'
          project_name: 'Apache Daffodil VS Code'
          project_id: 'daffodil-vscode'
          project_dir: 'daffodil-vscode'
          gpg_signing_key: ${{ secrets.DAFFODIL_GPG_SECRET_KEY }}
          svn_username: ${{ secrets.DAFFODIL_SVN_DEV_USERNAME }}
          svn_password: ${{ secrets.DAFFODIL_SVN_DEV_PASSWORD }}
          nexus_username: ${{ secrets.NEXUS_USER }}
          nexus_password: ${{ secrets.NEXUS_PW }}
          publish: true

      - name: Setup Java
        uses: actions/setup-java@67aec007b3fcabe15ca665bfccc1e255dd52e30d # v4.6.0
        with:
          distribution: temurin
          java-version: 8

      - name: Install Node.js
        uses: actions/setup-node@5e2628c959b9ade56971c0afcebbe5332d44b398 # v4.4.0
        with:
          node-version: 20

      - name: Install node dependencies
        run: yarn install

      - name: Create Binary Artifacts
        run: |
          yarn package

          ARTIFACT_BIN_DIR=${{ steps.rc.outputs.artifact_dir }}/bin
          mkdir -p $ARTIFACT_BIN_DIR
          cp *.vsix $ARTIFACT_BIN_DIR/
